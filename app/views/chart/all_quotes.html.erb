<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
<!-- <script src="moment.js"></script>
<script src="moment-timezone-with-data.js"></script> -->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
<%= javascript_include_tag "https://www.google.com/jsapi", "chartkick" %>

<div class="container-devise">
  <div class="container">
  <h1>Test de graph</h1>
    <%= render partial: "links" %>



    <% @symbols_array.each do |symbol| %>
      <h3><%= symbol%></h3>
      <div class="row">
        <div class="col-xs-12">
          <div class="perf-graph">
            <%= content_tag :div, "", id: symbol.downcase+"_chart", data: {section: instance_variable_get("@"+symbol.downcase+"_array")}, class: "chart" %>
          </div>
        </div>
      </div>
      <hr>
    <% end %>

    <div class="row">
      <div class="col-xs-12">
        <div class="perf-graph">
          <%= content_tag :div, "", id: "perf_chart", data: {section:@chart_data}, class: "chart" %>
        </div>
        
      </div>
    </div>
    <hr>
    
  </div>
  
</div>


<script>



    $(document).ready(function() {
        barChart("spy");
        barChart("vxx");
        barChart("vxz");
        barChart("xiv");
        barChart("ziv");
        perfChart();

    });



    function barChart(symbol) {

        var date_array = [];

        var data = $('#section_chart').data('section');

          // for (i in data) {
          //   array.push(data[i].value);
          //   date_array.push(data[i].date);

          // };

        var array = [];

        var data = $('#'+symbol+'_chart').data('section');

        var last_trade_time = "4:00pm" ;

        var bid = "" ;

        var previous_bid_status = "open";

        var previous_market_status = "open" ; 

        var previous_close = "" ;

        // var market_status = ""

        for (i in data) {
          array.push(data[i].ask);
          array.push(data[i].bid);
          array.push(data[i].previous_close);

          if (data[i].last_trade_time === last_trade_time) {
            market_status = "close"
          } else {
            market_status = "open"
          } ;

          if (data[i].bid === bid) {
            bid_status = "close"
          } else {
            bid_status = "open"
          } ;

          if (data[i].previous_close !== previous_close) {
            date_array.push(data[i].time);
          }

          if ((market_status !== previous_market_status) ) {
            date_array.push(data[i].time)
          };

          previous_market_status = market_status ;

          previous_bid_status = bid_status ;

          bid =  data[i].bid ;

          last_trade_time = data[i].last_trade_time ;

          previous_close = data[i].previous_close ;
        };

        var min = Math.floor(Math.min(...array));

        var max = Math.ceil(Math.max(...array));

        var mainColor = $('.nav-pills > li.active > a').css("background-color");



      Morris.Line({
      // ID of the element in which to draw the chart.
      element: symbol+'_chart',
      // Chart data records -- each entry in this array corresponds to a point on
      // the chart.
      data: $('#'+symbol+'_chart').data('section'),
      // The name of the data record attribute that contains x-values.
      xkey: 'time',
      // A list of names of data record attributes that contain y-values.
      ykeys: ['ask', 'bid', 'previous_close'],

      resize: true,

      lineWidth: 2,

      pointSize: 2,

      hoverCallback: function (index, options, content, row) {
        return "Last Trade Time : " +row.last_trade_time + content + "Created At :"+row.created_at;
      },



      dateFormat: function (x) {
        var date = new Date(x);
        if (date.getMinutes() === 0) {
          return date.getHours()+":00";
        } else {
          return date.getHours()+":"+date.getMinutes();
        };
      },

      // behaveLikeLine: true,

      fillOpacity: 0.2,

      goals: [0],

      goalStrokeWidth: 3,

      lineColors: ["#FF0000", mainColor, "#707070"],

      goalLineColors: ['#C73B04'],

      events: date_array,

      eventLineColors: ["#788687"],

      // ymin: -100,
      // ymax: 100,

      ymin: min,
      ymax: max,

      labels: ['ASK', 'BID', "Previous Close"]
    });
  }


    function perfChart() {

        var array = [];

        var data = $('#perf_chart').data('section');

        for (i in data) {
          array.push(data[i].value)
        };

        var min = Math.floor(Math.min(...array));

        var max = Math.ceil(Math.max(...array));

        var dif = max - min

        var mainColor = $('.nav-pills > li.active > a').css("background-color");

        
        // min = -3
        // if ((dif % 4) === 1) {
        //   max = max + 1 ;
        // } else if ((dif % 4) === 3) {
        //   max = max + 2 ;
        //   if (min < 0) {
        //     min = min -1 ;
        //   } else {
        //     min = -1
        //   }
        // }

      Morris.Line({
      // ID of the element in which to draw the chart.
      element: 'perf_chart',
      // Chart data records -- each entry in this array corresponds to a point on
      // the chart.
      data: $('#perf_chart').data('section'),
      // The name of the data record attribute that contains x-values.
      xkey: 'round_time',
      // A list of names of data record attributes that contain y-values.
      ykeys: ['value', 'spy_pnl','vxx_pnl','vxz_pnl','xiv_pnl','ziv_pnl'],

      resize: true,

      lineWidth: [3,1,1,1,1,1],

      pointSize: [3,1,1,1,1,1],

      dateFormat: function (x) {
        var date = new Date(x);
        if (date.getMinutes() === 0) {
          return date.getUTCHours()+":00";
        } else {
          return date.getUTCHours()+":"+date.getMinutes();
        };
      },

      xLabels: "30min",

      // smooth: false,


      xLabelFormat: function (x) {
        var date = new Date(x);
        if (date.getMinutes() === 0) {
          return date.getUTCHours()+":00";
        } else {
          return date.getUTCHours()+":"+date.getMinutes();
        };
      },

      // behaveLikeLine: true,

      fillOpacity: 0.2,

      goals: [0],

      goalStrokeWidth: 3,

      // lineColors: [mainColor],

      goalLineColors: ['#C73B04'],

      // ymin: -100,
      // ymax: 100,

      // ymin: min,
      // ymax: max,

      labels: ['PNL', 'SPY', 'VXX', 'VXZ', 'XIV', 'ZIV']
    });
  }

</script>




<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">

<div class="container container-devise">
  <h1>Values of <%= @date.strftime("%b %d")%></h1>
  <%= link_to new_subscriber_path, data: { no_turbolink: true } do %>
    <button class="btn btn-primary">Register</button>
  <% end %>
	<div class="row">
 		<div class="col-xs-12">
 			<%= content_tag :div, "", id: "line_chart", data: {section:@chart_data}, class: "chart" %>
    </div>
	</div>
  <br>
  <table class="table table-striped">
    <thead>
      <tr>
        <th>Symbol</th>
        <th>Coefficient</th>
        <th>Number of shares</th>
        <th>Coefficient</th>
        <th>Number of shares</th>
        <th>Delta</th>
      </tr>
    </thead>
    <tbody>
    <% @table_array.each do |row| %>

        <td><%= row[:symbol] %></td>
        <td><%= row[:today_coef].round(2)%></td>
        <td><%= row[:nbr_shares_today].round%></td>
        <td class= "<%= @new_coef_class %>"><%= row[:tomorrow_coef].round(2)%></td>
        <td class= "<%= @new_coef_class %>"><%= row[:nbr_shares_tomorrow].round%></td>
        <% if row[:delta] == 0 %>
          <td> - </td>
        <% else %>
          <td class = "<%= row[:delta] > 0 ? 'success' : 'danger' %>"><%= row[:delta].round(2) %></td>
        <% end %>
      </tr>
    <% end %>
    </tbody>
  </table>
</div>


<script>
	var array = [];

  var data = $('#line_chart').data('section');

  for (i in data) {
  	array.push(data[i].value)
  };


    $(document).ready(function() {
        barChart();

    });



    function barChart() {






    	Morris.Line({
      // ID of the element in which to draw the chart.
      element: 'line_chart',
      // Chart data records -- each entry in this array corresponds to a point on
      // the chart.
      data: $('#line_chart').data('section'),
      // The name of the data record attribute that contains x-values.
      xkey: 'time',
      // A list of names of data record attributes that contain y-values.
      ykeys: ['value'],

      resize: true,

      parseTime: false,

      // behaveLikeLine: true,

      fillOpacity: 0.2,

      ymin: Math.floor(Math.min(...array))-1,
      ymax: Math.ceil(Math.max(...array))+1,
      // xLabels: "week",

      // LabelFormat: function (x) { return new Date(x).getDate() + ' ' + monthNames[new Date(x).getMonth()]; },

      // xLabelFormat: function (x) { return x.toString(); },



      // ymax: 10;

      // dateFormat: function (x) { return new Date(x).getDate() + ' ' + monthNames[new Date(x).getMonth()]; },

      // xLabels: 'week',

      // xLabelFormat: function (x) { return new Date(x).getDate() + ' ' + monthNames[new Date(x).getMonth()]; },

      // xLabelFormat: function (x) { return x; },




      // Labels for the ykeys -- will be displayed when you hover over the
      // chart.
      labels: ['Value']
    });
  }

  function refreshAt(hours, minutes, seconds) {
    var now = new Date();
    var then = new Date();

    if(now.getHours() > hours ||
       (now.getHours() == hours && now.getMinutes() > minutes) ||
        now.getHours() == hours && now.getMinutes() == minutes && now.getSeconds() >= seconds) {
        then.setDate(now.getDate() + 1);
    }
    then.setHours(hours);
    then.setMinutes(minutes);
    then.setSeconds(seconds);

    var timeout = (then.getTime() - now.getTime());
    setTimeout(function() { window.location.reload(true); }, timeout);
  }
  refreshAt(11,33,0);
</script>




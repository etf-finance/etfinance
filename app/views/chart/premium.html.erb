<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.css">
<%= javascript_include_tag "https://www.google.com/jsapi", "chartkick" %>

<div class="container-devise">
  <div class="container">
    <%= render partial: "links" %>
    <div class="row">
      <div class="col-xs-12">
        <h2><%= current_user.first_name%>'s values of <%= @date.strftime("%b %d, %Y")%></h2>
        <% if !@premium %>
          <p><%= link_to new_subscriber_path, data: { no_turbolink: true } do %>
            <button class="btn btn-xl btn-danger">Subscribe to our live performance charts</button>
          <% end %></p>
        <% end %>
        
      </div>
    </div>
    
    <div class="row">
      <div class="col-xs-12">
        <div class="perf-graph">
          <%= content_tag :div, "", id: "perf_chart", data: {section:@chart_data}, class: "chart" %>
          <div class="graph-info"><span>Real-time with a 15 minutes delay</span><br><span>Values are refreshing every 10 minutes</span></div>
        </div>
        
      </div>
    </div>
    <hr>


    <% if @premium %>

    <div class="row">
      <div class="col-xs-6">
        <table class="table table-striped perf-graph">
          <thead>
          <tr>
            <th><%= @market_moment%></th>
            <th>TODAY</th>
            <th></th>
            <th>TOMORROW</th>
          </tr>
            <tr>
              <th>Symbol</th>
              <th>Coefficient</th>
              <th># shares</th>
              <th>Coefficient</th>
              <th># shares</th>
              <th>Delta</th>
            </tr>
          </thead>
          <tbody>
          <% @table_array.each do |row| %>
            <tr>
              <td><%= row[:symbol] %></td>
              <td><%= row[:today_coef].round(2)%></td>
              <td><%= row[:nbr_shares_today].round%></td>
              <td class= "<%= @new_coef_class %>"><%= row[:tomorrow_coef].round(2)%></td>
              <td class= "<%= @new_coef_class %>"><%= row[:nbr_shares_tomorrow].round%></td>
              <% if row[:delta] == 0 %>
                <td> - </td>
              <% else %>
                <td class = "<%= row[:delta] > 0 ? 'success' : 'danger' %>"><%= row[:delta].round %></td>
              <% end %>
            </tr>
          <% end %>
          </tbody>
        </table>
      </div>
    </div>
    <% if @market_moment == "open" %>
      <div class="row">
        <div class="col-xs-6">
          <div class="card card-content">Find our recommandations at 3:55 EST</div>
        </div>
      </div>
    <% end %>
  
      
    <% end %>
  </div>
  
</div>


<script>

	var array = [];

  var data = $('#line_chart').data('section');

  for (i in data) {
  	array.push(data[i].value)
  };

  var min = Math.floor(Math.min(...array));

  var max = Math.ceil(Math.max(...array));

  var dif = max - min

  var mainColor = $('.nav-pills > li.active > a').css("background-color");

  

  if ((dif % 4) === 1) {
    max = max + 1 ;
  } else if ((dif % 4) === 3) {
    max = max + 2 ;
    min = min - 1 ;
  }






    $(document).ready(function() {
        perfChart();
    });


        function perfChart() {

        var array = [];

        var data = $('#perf_chart').data('section');

        for (i in data) {
          array.push(data[i].value)
        };

        var min = Math.floor(Math.min(...array));

        var max = Math.ceil(Math.max(...array));

        var dif = max - min

        var mainColor = $('.nav-pills > li.active > a').css("background-color");

        
        // min = -3
        // if ((dif % 4) === 1) {
        //   max = max + 1 ;
        // } else if ((dif % 4) === 3) {
        //   max = max + 2 ;
        //   if (min < 0) {
        //     min = min -1 ;
        //   } else {
        //     min = -1
        //   }
        // }

      Morris.Line({
      // ID of the element in which to draw the chart.
      element: 'perf_chart',
      // Chart data records -- each entry in this array corresponds to a point on
      // the chart.
      data: $('#perf_chart').data('section'),
      // The name of the data record attribute that contains x-values.
      xkey: 'round_time',
      // A list of names of data record attributes that contain y-values.
      ykeys: ['value', 'spy_pnl','vxx_pnl','vxz_pnl','xiv_pnl','ziv_pnl'],

      resize: true,

      lineWidth: [3,1,1,1,1,1],

      pointSize: [3,1,1,1,1,1],

      dateFormat: function (x) {
        var date = new Date(x);
        if (date.getMinutes() === 0) {
          return date.getUTCHours()+":00";
        } else {
          return date.getUTCHours()+":"+date.getMinutes();
        };
      },

      xLabels: "30min",

      // smooth: false,


      xLabelFormat: function (x) {
        var date = new Date(x);
        if (date.getMinutes() === 0) {
          return date.getUTCHours()+":00";
        } else {
          return date.getUTCHours()+":"+date.getMinutes();
        };
      },

      // behaveLikeLine: true,

      fillOpacity: 0.2,

      goals: [0],

      goalStrokeWidth: 3,

      // lineColors: [mainColor],

      goalLineColors: ['#C73B04'],

      // ymin: -100,
      // ymax: 100,

      // ymin: min,
      // ymax: max,

      labels: ['PNL', 'SPY', 'VXX', 'VXZ', 'XIV', 'ZIV']
    });
  }





  function refreshAt(hours, minutes, seconds) {
    var now = new Date();
    var then = new Date();

    if(now.getHours() > hours ||
       (now.getHours() == hours && now.getMinutes() > minutes) ||
        now.getHours() == hours && now.getMinutes() == minutes && now.getSeconds() >= seconds) {
        then.setDate(now.getDate() + 1);
    }
    then.setHours(hours);
    then.setMinutes(minutes);
    then.setSeconds(seconds);

    var timeout = (then.getTime() - now.getTime());
    setTimeout(function() { window.location.reload(true); }, timeout);
  }

  var hour = <%= @refreshing_time.hour%>;
  var minutes = <%= @refreshing_time.min%>;
  // var hour = time.getHours();
  refreshAt(hour,minutes,0);
</script>



